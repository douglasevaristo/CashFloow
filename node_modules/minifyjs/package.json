{
  "name": "minifyjs",
  "author": {
    "name": "Clark Fischer"
  },
  "version": "0.2.0",
  "main": "lib/minify.js",
  "keywords": [
    "minify",
    "minifier",
    "min",
    "minification",
    "uglify",
    "gcc",
    "closure",
    "yui"
  ],
  "bin": {
    "minifyjs": "./bin/minify"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha test/*.js test/minifiers/*.js test/beautifiers/*.js"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "description": "A node-based javascript minifier/beautifier.",
  "homepage": "http://github.com/clarkf/minifyjs",
  "directories": {
    "lib": "lib"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/clarkf/minifyjs.git"
  },
  "dependencies": {
    "uglify-js": "~2.2",
    "yuicompressor": "~2.4",
    "closure-compiler": "~0.2",
    "js-beautify": "~0.4",
    "optimist": "~0.3"
  },
  "devDependencies": {
    "mocha": "~1.8",
    "expect.js": "~0.2",
    "sinon": "~1.6"
  },
  "_npmUser": {
    "name": "clarkf",
    "email": "clark.fischer@gmail.com"
  },
  "_id": "minifyjs@0.2.0",
  "optionalDependencies": {},
  "_engineSupported": true,
  "_npmVersion": "1.1.0-3",
  "_nodeVersion": "v0.6.9",
  "_defaultsLoaded": true,
  "dist": {
    "shasum": "1f06f3bf907795a72fe9213cee08a132a31a3c43",
    "tarball": "http://registry.npmjs.org/minifyjs/-/minifyjs-0.2.0.tgz"
  },
  "readme": "# minifyjs — A node minifier\n\n<https://github.com/clarkf/minifyjs>\n[![Build Status](https://travis-ci.org/clarkf/minifyjs.png?branch=master)](https://travis-ci.org/clarkf/minifyjs)\n\n\n`minifyjs` is a Javascript code minifier written for node. It's aim is flexibility.\n\n## Installation\n\n\nminifyjs is an [npm](http://npmjs.org) package. You should be able to install it using\n\n    npm install minifyjs\n    \nTo install the `minifyjs` command, use\n\n    npm install -g minifyjs\n\nThis will install the current stable version. To install the latest development version, clone this repository and install it.\n\n    git clone git://github.com/clarkf/minifyjs.git\n    cd minifyjs\n    npm install -g\n\nCongratulations! You're half way to the minified files of your dreams.\n\n## Use\n\nYou can use minifyjs from the command line.\n\n    minifyjs [arguments] [-b/m] [-i path/input.js] [-o path/output.js]\n\nPossible arguments\n\n* `-b` or `--beautify` — Beautify code. The opposite of minifying code.\n* `-m` or `--minify` — Minify code. Available options for the minification engine\n* `-e` or `--engine E` — Specify an engine. If left unspecified, it defaults to 'best', for minification, or 'js-beautify' for beautification. For a list of available engines, see Engine section below.\n* `-l I` or `--level I` — Specify a minification level (does not apply to beautification). Generally, there are three levels available:\n    * `0` — Strips whitespace, leaves code intact (depending on engine)\n    * `1` — Simple optimizations. Changes code slightly without deep optimization. Probably what you'll want for most code.\n    * `2` — Advanced optimizations.\n* `-o` or `--output` — Write data to a specific file instead of outputting to `STDOUT`.\n\nThe concept here is for use within larger projects. You can easily integrate this into your workflow using:\n\n    minifyjs -m mycode.js > mycode.min.js\n\nThis will create a file called mycode.min.js containing the smallest minified version available (see `best` engine explanation below).\n\nOr, with a specific engine:\n\n    minifyjs -m -e uglify mycode.js\n\nOr, beautify with a specific engine:\n\n    minifyjs -b -e js-beautify mycode.js\n\n## Engines\n\n### Minification engines\nCurrently, minifyjs only supports two engines for minification:\n\n* `uglify` — Mihai Bazon's amazing [UglifyJS2](https://github.com/mishoo/UglifyJS2).\n* `gcc` — [Google Closure Compiler](http://code.google.com/closure/compiler/) via Tim Smart's [`node-closure`](https://github.com/Tim-Smart/node-closure). See their [API Reference](http://code.google.com/closure/compiler/docs/api-ref.html) for details.\n* `yui` — YUI Compressor. This is currently done through Tim Smart's [`node-yui-compressor`](https://github.com/Tim-Smart/node-yui-compressor) module. Currently, minification levels are ignored.\n* `best` — Custom engine which calls all other engines and compares their output. It finds the smallest (most minified) code, and returns it.\n\n### Beautification engines\n* `uglify` — Mihai Bazon's amazing [UglifyJS2](https://github.com/mishoo/UglifyJS2).\n* `js-beautify` — Einar Lielmanis' [js-beautify](https://github.com/einars/js-beautify).\n\n## API\n\nIf you'd like to use minifyjs programmatically, you can do so by using `require('minifyjs')`. Currently, the API looks like this:\n\n    mjs = require('minifyjs');\n    \n    //Minify some code\n    mjs.minify(code, options, callback);\n    \n    //Beautify some code\n    mjs.beautify(code, options, callback);\n\nWhere\n\n* `code` is a [`stream.Readable`](http://nodejs.org/docs/latest/api/stream.html#stream_class_stream_readable) containing the code to be processed.\n* `options` is a key/value hash. Options include: `engine` (the engine\n  to use), `level` (Level of minification. The lower, the less minified).\n* `callback` is a `Function` to be called once the code is returned from the engine. It's passed back in the format `callback(error, code);`\n\nNode that a callback is required because some methods (read: gcc) require asynchronous calls. In order to support this sort of engine, all code comes from callbacks. A good example may be:\n\n    var myCode = \"...codehere...\";\n    function presentCode(error, code) {\n        if (error) {\n            throw error;\n        }\n        //Present the code to the user...\n    }\n    require('minifyjs').minify(myCode, { engine: 'yui' }, presentCode);\n\n## Conclusion\n\nEnjoy! Please fork, push and file issues as desired. Feel free to\ncontribute!\n",
  "maintainers": [
    {
      "name": "clarkf",
      "email": "clark.fischer@gmail.com"
    }
  ],
  "_shasum": "1f06f3bf907795a72fe9213cee08a132a31a3c43",
  "_resolved": "https://registry.npmjs.org/minifyjs/-/minifyjs-0.2.0.tgz",
  "_from": "minifyjs@*"
}
